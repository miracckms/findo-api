# =========================================
# FINDO API - PRODUCTION CONFIGURATION
# =========================================

# Server Configuration
server.port=${PORT:8080}
server.servlet.context-path=/api

# Application Configuration
spring.application.name=findo-api

# Database Configuration - Production PostgreSQL (Environment Variables)
spring.datasource.url=jdbc:postgresql://${DB_HOST}:${DB_PORT:5432}/${DB_NAME}?sslmode=require
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASS}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate Configuration - Production
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.time_zone=UTC
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.use_sql_comments=false

# PostgreSQL specific optimizations - Production
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.leak-detection-threshold=60000
spring.datasource.hikari.max-lifetime=1800000

# File Upload Configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=50MB

# Mail Configuration - Production
spring.mail.host=${MAIL_HOST:smtp.gmail.com}
spring.mail.port=${MAIL_PORT:587}
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.ssl.trust=${MAIL_HOST:smtp.gmail.com}

# JWT Configuration - Production (Must be set via environment)
jwt.secret=${JWT_SECRET}
jwt.expiration=86400

# File Upload Configuration
file.upload.dir=${FILE_UPLOAD_DIR:/app/uploads}
file.upload.max-size=10485760

# SMS Configuration - Production
sms.provider=${SMS_PROVIDER:twilio}
sms.account-sid=${SMS_ACCOUNT_SID}
sms.auth-token=${SMS_AUTH_TOKEN}
sms.from-number=${SMS_FROM_NUMBER}

# App Configuration
app.max-ads-per-user=${MAX_ADS_PER_USER:50}
app.max-photos-per-ad=${MAX_PHOTOS_PER_AD:10}
app.admin-emails=${ADMIN_EMAILS}

# Swagger/OpenAPI Configuration - Disabled in production
springdoc.api-docs.enabled=false
springdoc.swagger-ui.enabled=false

# Logging Configuration - Production
logging.level.com.findo=INFO
logging.level.org.springframework.security=WARN
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN
logging.level.org.springframework.web=WARN
logging.level.org.springframework.boot=INFO
logging.level.org.springframework=WARN
logging.level.org.hibernate=WARN

# Production specific settings
spring.devtools.restart.enabled=false
spring.devtools.livereload.enabled=false

# Security headers
server.servlet.session.cookie.secure=true
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.same-site=strict

# Actuator endpoints - Limited in production
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=never
management.metrics.export.prometheus.enabled=true
